{"version":3,"sources":["components/Navbar.js","store/constants/action-types.js","components/Home.js","store/actions/index.js","components/EmployeeForm.js","components/EditEmployee.js","components/EmployeeDisplay.js","components/SearchEmployee.js","App.js","reportWebVitals.js","store/reducers/index.js","store/index.js","index.js"],"names":["Navbar","className","to","ADD_EMP","DELETE_EMP","UPDATE_EMP","connect","state","emp","dispatch","addEmp","type","payload","history","useHistory","validationSchema","Yup","fname","required","lname","gender","marital","dob","email","contact","address","useFormik","initialValues","onSubmit","value","console","log","id","length","values","alert","handleSubmit","handleChange","errors","touched","htmlFor","name","onChange","onClick","push","from","deleteEmp","scope","map","el","icon","faEdit","faTrash","EditEmployee","useState","setFname","setLname","setGender","setMarital","setDob","setEmail","setContact","setAddress","empData","useSelector","useDispatch","useParams","currentEmp","find","current","parseInt","useEffect","e","preventDefault","updateEmp","target","checked","EmployeeDisplay","props","data","SearchEmployee","search","setSearch","placeholder","filter","searchID","App","path","end","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","item","Object","assign","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38f50626.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"navbar1\">\r\n        <Link to=\"/\" className=\"navlink5\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/display\" className=\"navlink5\">\r\n          Display\r\n        </Link>\r\n        <Link to=\"/search\" className=\"navlink5\">\r\n          Search\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export const ADD_EMP=\"ADD_EMP\";\nexport const DELETE_EMP=\"DELETE_EMP\";\nexport const UPDATE_EMP=\"UPDATE_EMP\";\n","import React from \"react\";\r\nimport { addEmp } from \"../store/actions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../styles/home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst Home = ({ emp, addEmp }) => {\r\n  // const [employee,setEmployeeData]=useState({fname:' ', lname:' ',gender:' ',maritals:' '});\r\n  // const [fname, setFname] = useState(\"\");\r\n  // const [lname, setLname] = useState(\"\");\r\n  // const [gender, setGender] = useState(\"\");\r\n  // const [marital, setMarital] = useState(\"\");\r\n  // const [dob, setDob] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [contact, setContact] = useState(\"\");\r\n  // const [address, setAddress] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  // const formadata = (e) => {\r\n  //   e.preventDefault();\r\n  //   addEmp({\r\n  //     id: emp.length > 0 ? emp[emp.length - 1].id + 1 : 0,\r\n  //     fname: fname,\r\n  //     lname: lname,\r\n  //     gender: gender,\r\n  //     marital: marital,\r\n  //     dob: dob,\r\n  //     email: email,\r\n  //     contact: contact,\r\n  //     address: address,\r\n  //   });\r\n  //   history.push(\"/display\");\r\n  // };\r\n\r\n  const validationSchema = Yup.object({\r\n    fname: Yup.string().required(\"Required\"),\r\n    lname: Yup.string().required(\"Required\"),\r\n    gender: Yup.string().required(\"Required\"),\r\n    marital: Yup.string().required(\"Required\"),\r\n    dob: Yup.string().required(\"Required\"),\r\n    email: Yup.string().required(\"Required\"),\r\n    contact: Yup.string().required(\"Required\"),\r\n    address: Yup.string().required(\"Required\")\r\n  });\r\n\r\n  const { handleSubmit, handleChange, values, errors, touched } = useFormik({\r\n    initialValues: {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      gender: \"\",\r\n      marital: \"\",\r\n      dob: \"\",\r\n      email: \"\",\r\n      contact: \"\",\r\n      address: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit(value) {\r\n      console.log(\"values ---->\", value);\r\n      addEmp({\r\n        id: emp.length > 0 ? emp[emp.length - 1].id + 1 : 0,\r\n        fname: values.fname,\r\n        lname: values.lname,\r\n        gender: values.gender,\r\n        marital: values.marital,\r\n        dob: values.dob,\r\n        email: values.email,\r\n        contact: values.contact,\r\n        address: values.address,\r\n      })\r\n      alert(\"Succefully record inserted\")\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        className=\"border border-dark bg-light text-dark\"\r\n      >\r\n        <div className=\"row\">\r\n          <h3>\r\n            <strong>Employee Registration Form</strong>\r\n          </h3>\r\n          <div className=\"col-6 col-md-4 mt-2\">\r\n            <label>Employee name </label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 mt-2 \">\r\n            <label htmlFor=\"fname\">First name </label>\r\n            <br />\r\n            <input\r\n              className=\"mb-2\"\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              value={values.fname}\r\n              onChange={handleChange}\r\n            // onChange={(e) => setFname(e.target.value)}\r\n            />\r\n            {errors.fname && touched.fname && errors.fname}\r\n            <br />\r\n            <label htmlFor=\"lname\">Last name </label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"lname\"\r\n              value={values.lname}\r\n              onChange={handleChange}\r\n            // onChange={(e) => setLname(e.target.value)}\r\n            />\r\n            {/* {errors.lname ? errors.lname : null} */}\r\n            {errors.lname && touched.lname && errors.lname}\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"gender\">Gender</label>\r\n          </div>\r\n          {errors.gender && touched.gender && errors.gender}\r\n          <div className=\"col-6 col-md-4 mb-1\">\r\n            <div className=\"custom-control custom-radio custom-control-inline \">\r\n              <input\r\n                type=\"radio\"\r\n                id=\"customRadioInline1\"\r\n                name=\"gender\"\r\n                className=\"custom-control-input\"\r\n                // value={values.gender.male}\r\n                value=\"Male\"\r\n                // onChange={(e) => setGender(e.target.value)}\r\n                onChange={handleChange}\r\n              />\r\n              <label\r\n                className=\"custom-control-label p-2\"\r\n                htmlFor=\"customRadioInline1\"\r\n              >\r\n                Male\r\n              </label>\r\n              <input\r\n                type=\"radio\"\r\n                id=\"customRadioInline2\"\r\n                name=\"gender\"\r\n                className=\"custom-control-input\"\r\n                // value={values.gender.female}\r\n                value=\"Female\"\r\n                // onChange={(e) => setGender(e.target.value)}\r\n                onChange={handleChange}\r\n              />\r\n              <label\r\n                className=\"custom-control-label p-2\"\r\n                htmlFor=\"customRadioInline2\"\r\n              >\r\n                Female\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"marital\">Marital status</label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <select\r\n              id=\"marital\"\r\n              value={values.marital}\r\n              onChange={handleChange}\r\n            // onChange={(e) => setMarital(e.target.value)}\r\n            >\r\n              <option>--Please select--</option>\r\n              <option value=\"Married\">Married</option>\r\n              <option value=\"Unmarried\">Unmarried</option>\r\n              <option value=\"Divorced\">Divorced</option>\r\n              <option value=\"Widowed\">Widowed</option>\r\n            </select>\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {errors.marital && touched.marital && errors.marital}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"dob\">Date of birth</label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <input\r\n              type=\"date\"\r\n              name=\"dob\"\r\n              value={values.dob}\r\n              // onChange={(e) => setDob(e.target.value)}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {errors.dob && touched.dob && errors.dob}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"email\">Email </label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={values.email}\r\n              // onChange={(e) => setEmail(e.target.value)}\r\n              onChange={handleChange}\r\n            />\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {errors.email && touched.email && errors.email}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"phone\">Phone number </label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <input\r\n              type=\"tel\"\r\n              name=\"contact\"\r\n              value={values.contact}\r\n              onChange={handleChange}\r\n            // onChange={(e) => setContact(e.target.value)}\r\n            />\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {errors.contact && touched.contact && errors.contact}\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-6 col-md-4 \">\r\n            <label htmlFor=\"address\">Address</label>\r\n          </div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={values.address}\r\n              onChange={handleChange}\r\n            // onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n            <br />\r\n            <br />\r\n          </div>\r\n          {errors.address && touched.address && errors.address}\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-6 col-md-4\"></div>\r\n          <div className=\"col-6 col-md-4 \">\r\n            <div className=\"row justify-content-between\">\r\n              <div className=\"col\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary\"\r\n                // onClick={() =>\r\n                //   addEmp({\r\n                //     id: emp.length > 0 ? emp[emp.length - 1].id + 1 : 0,\r\n                //     fname: values.fname,\r\n                //     lname: values.lname,\r\n                //     gender: values.gender,\r\n                //     marital: values.marital,\r\n                //     dob: values.dob,\r\n                //     email: values.email,\r\n                //     contact: values.contact,\r\n                //     address: values.address,\r\n                //   })\r\n                // }\r\n                >\r\n                  Register\r\n                </button>\r\n              </div>\r\n              <div className=\"col\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary \"\r\n                  onClick={() => history.push(\"/display\", { from: \"Home\" })}\r\n                >\r\n                  Next\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <br />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { emp: state };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addEmp: (emp) => dispatch(addEmp(emp)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n// export default Form;\r\n// export default Home;\r\n","import { ADD_EMP, DELETE_EMP, UPDATE_EMP } from \"../constants/action-types\";\n\nexport const addEmp = (emp) => ({ type: ADD_EMP, payload: emp });\nexport const deleteEmp = (id) => ({ type: DELETE_EMP, payload: id });\nexport const updateEmp = (emp, id) => ({\n  type: UPDATE_EMP,\n  payload: { emp, id },\n});\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteEmp } from \"../store/actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faEdit, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst EmployeeForm = ({ emp, deleteEmp }) => {\r\n  // console.log(\"props\", props.emp);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"mt-2\">\r\n        <h1>Employee Details List</h1>\r\n\r\n        <div className=\"mt-2\">\r\n          <table className=\"table table-responsive table-striped  d-table-cell align-middle\">\r\n            <thead className=\"table-dark\">\r\n              <tr>\r\n                <th scope=\"col\">Emp id</th>\r\n                <th scope=\"col\">First Name</th>\r\n                <th scope=\"col\">Last Name</th>\r\n                <th scope=\"col\">Gender</th>\r\n                <th scope=\"col\">Marital Status</th>\r\n                <th scope=\"col\">Date of Birth</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Contact</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {emp.length > 0 ? (\r\n                emp.map((el, id) => {\r\n                  return (\r\n                    <tr key={id}>\r\n                      <td>{el.id}</td>\r\n                      <td>{el.fname}</td>\r\n                      <td>{el.lname}</td>\r\n                      <td>{el.gender}</td>\r\n                      <td>{el.marital}</td>\r\n                      <td>{el.dob}</td>\r\n                      <td>{el.email}</td>\r\n                      <td>{el.contact}</td>\r\n                      <td>{el.address}</td>\r\n                      <td>\r\n                        <div>\r\n                          <Link to={`/edit/${el.id}`}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                          </Link>\r\n                        </div>\r\n                      </td>\r\n                      <td>\r\n                        <div onClick={() => deleteEmp(el.id)}>\r\n                          <FontAwesomeIcon icon={faTrash} />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              ) : (\r\n                <tr>\r\n                  <th>No contacts found</th>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { emp: state };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteEmp: (emp) => dispatch(deleteEmp(emp)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeForm);\r\n// export default List;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateEmp } from \"../store/actions\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nexport const EditEmployee = () => {\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [marital, setMarital] = useState(\"\");\n  const [dob, setDob] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n\n  const empData = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const history = useHistory();\n\n  const currentEmp = empData.find((current) => current.id === parseInt(id));\n\n  useEffect(() => {\n    if (currentEmp) {\n      setFname(currentEmp.fname);\n      setLname(currentEmp.lname);\n      setGender(currentEmp.gender);\n      setMarital(currentEmp.marital);\n      setDob(currentEmp.dob);\n      setEmail(currentEmp.email);\n      setContact(currentEmp.contact);\n      setAddress(currentEmp.address);\n    }\n  }, [currentEmp]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      updateEmp({\n        id: parseInt(id),\n        fname,\n        lname,\n        gender,\n        marital,\n        dob,\n        email,\n        contact,\n        address,\n      })\n    );\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      {currentEmp ? (\n        <form\n          onSubmit={handleSubmit}\n          className=\"border border-dark bg-light text-dark\"\n        >\n          <div className=\"row mt-2\">\n            <h3>\n              <strong>Employee Registration Form</strong>\n            </h3>\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee name </label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2 \">\n              <label htmlFor=\"fname\">First name </label>\n              <br />\n              <input\n                className=\"mb-2\"\n                type=\"text\"\n                value={fname}\n                onChange={(e) => setFname(e.target.value)}\n              />\n              <br />\n              <label htmlFor=\"lname\">Last name </label>\n              <br />\n              <input\n                type=\"text\"\n                value={lname}\n                onChange={(e) => setLname(e.target.value)}\n              />\n              <br />\n              <br />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"gender\">Gender</label>\n            </div>\n\n            <div className=\"col-6 col-md-4 mb-1\">\n              <div className=\"custom-control custom-radio custom-control-inline \">\n                <input\n                  type=\"radio\"\n                  id=\"customRadioInline1\"\n                  className=\"custom-control-input\"\n                  value=\"Male\"\n                  checked={gender === \"Male\"}\n                  onChange={(e) => setGender(e.target.value)}\n                />\n                <label\n                  className=\"custom-control-label p-2\"\n                  htmlFor=\"customRadioInline1\"\n                >\n                  Male\n                </label>\n                <input\n                  type=\"radio\"\n                  id=\"customRadioInline2\"\n                  className=\"custom-control-input\"\n                  value=\"Female\"\n                  checked={gender === \"Female\"}\n                  onChange={(e) => setGender(e.target.value)}\n                />\n                <label\n                  className=\"custom-control-label p-2\"\n                  htmlFor=\"customRadioInline2\"\n                >\n                  Female\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"marital\">Marital status</label>\n            </div>\n            <div className=\"col-6 col-md-4 \">\n              <select\n                id=\"marital\"\n                value={marital}\n                onChange={(e) => setMarital(e.target.value)}\n              >\n                <option>--Please select--</option>\n                <option value=\"Married\">Married</option>\n                <option value=\"Unmarried\">Unmarried</option>\n                <option value=\"Divorced\">Divorced</option>\n                <option value=\"Widowed\">Widowed</option>\n              </select>\n              <br />\n              <br />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"dob\">Date of birth</label>\n            </div>\n            <div className=\"col-6 col-md-4 \">\n              <input\n                type=\"cal\"\n                name=\"dob\"\n                value={dob}\n                onChange={(e) => setDob(e.target.value)}\n              />\n              <br />\n              <br />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"email\">Email </label>\n            </div>\n            <div className=\"col-6 col-md-4 \">\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <br />\n              <br />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"phone\">Phone number </label>\n            </div>\n            <div className=\"col-6 col-md-4 \">\n              <input\n                type=\"tel\"\n                name=\"contact\"\n                value={contact}\n                onChange={(e) => setContact(e.target.value)}\n              />\n              <br />\n              <br />\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-6 col-md-4 \">\n              <label htmlFor=\"address\">Address</label>\n            </div>\n            <div className=\"col-6 col-md-4 \">\n              <input\n                type=\"text\"\n                name=\"address\"\n                value={address}\n                onChange={(e) => setAddress(e.target.value)}\n              />\n              <br />\n              <br />\n            </div>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Update\n          </button>\n          <br />\n          <br />\n        </form>\n      ) : (\n        <h1 className=\"text-center\">No Employees Found</h1>\n      )}\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return { emp: state };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     updateEmp: (emp, id) => {\n//       dispatch(updateEmp(emp, id));\n//     },\n//   };\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(EditEmployee);\n\nexport default EditEmployee;\n","import React from \"react\";\n\nexport const EmployeeDisplay = (props) => {\n  console.log(\"props search\", props);\n\n  return (\n    <div className=\"container\">\n      <div className=\"card  mx-auto text-center w-75 mt-5 border border-dark bg-light\">\n        <div className=\"card-body \">\n          <div className=\"row  justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee First Name </label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.fname}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Last Name </label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.lname}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Gender</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.gender}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Marital Status</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.marital}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n\n              <label>Employee Date of Birth</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.dob}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Email Id</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.email}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Phone Number</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\">{props.data.contact}</div>\n          </div>\n          <div className=\"row justify-content-md-center\">\n            <div className=\"col-6 col-md-4 mt-2\">\n              <label>Employee Address</label>\n            </div>\n            <div className=\"col-6 col-md-4 mt-2\"> {props.data.address}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeDisplay;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport EmployeeDisplay from \"./EmployeeDisplay\";\n\nexport const SearchEmployee = () => {\n  const emp = useSelector((state) => state);\n  const [search, setSearch] = useState(\"\");\n  const currentEmp = emp.find((current) => current.id === parseInt(search));\n  console.log(\"search\", currentEmp);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"mt-4\">Search Employee Information</h1>\n      <form>\n        <input\n          type=\"text\"\n          name=\"search\"\n          className=\"mt-3\"\n          placeholder=\"Enter Employee ID only\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </form>\n      <ul>\n        {emp\n          .filter((searchID) => searchID.id === parseInt(search))\n          .map((el, id) => {\n            return (\n              <div key={id}>\n                <EmployeeDisplay data={el} />\n              </div>\n            );\n          })}\n        {/* {\n          currentEmp ?\n            <EmployeeDisplay data={currentEmp} /> :\n            <div className=\"m-2\">No record found</div>\n        } */}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchEmployee;\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport EmployeeForm from \"./components/EmployeeForm\";\nimport { EditEmployee } from \"./components/EditEmployee\";\nimport { SearchEmployee } from \"./components/SearchEmployee\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" end component={() => <Home />} />\n          <Route path=\"/display\" component={() => <EmployeeForm />} />\n          <Route path=\"/edit/:id\" component={() => <EditEmployee />} />\n          <Route path=\"/search\" component={() => <SearchEmployee />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_EMP, DELETE_EMP, UPDATE_EMP } from \"../constants/action-types\";\n\nconst initialState = [\n  {\n    id: 1,\n    fname: \"ABC\",\n    lname: \"XYZ\",\n    gender: \"M\",\n    marital: \"Married\",\n    dob: \"01-12-1989\",\n    email: \"xyz@gmail.com\",\n    contact: \"123456789\",\n    address: \"Mumbai\",\n  },\n];\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_EMP:\n      state = [...state, action.payload];\n      return state;\n    case DELETE_EMP:\n      const deleteEmp = state.filter((emp) =>\n        emp.id === action.payload ? null : emp\n      );\n      state = deleteEmp;\n      return state;\n    case UPDATE_EMP:\n      const updateEmp = state.filter((item) =>\n        item.id === action.payload.emp.id\n          ? Object.assign(item, action.payload.emp)\n          : item\n      );\n      state = updateEmp;\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/index.js\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}